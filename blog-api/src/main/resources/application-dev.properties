# 服务器端口号
server.port=8090
# 博客名称
blog.name=NBlog Local
# 后端服务URL
blog.api=http://localhost:${server.port}
# 后台管理URL
blog.cms=http://localhost:8080
# 前台界面URL
blog.view=http://localhost:8081
# 数据库连接信息
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/nblog?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=rXbDgSie
# Redis连接信息
spring.redis.host=127.0.0.1
spring.redis.password=miYsjVRN
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=10000ms
# MyBatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
# 日志级别配置
logging.level.root=info
logging.level.top.naccl=debug
logging.file=blog-api/log/blog-dev

# 1000 * 60 * 60 * 24 * 3 token过期时间
token.expireTime=259200000
# 开发环境token密钥
token.secretKey=dev-nblog-token-secret-key

# 博主接收评论提醒方式: Telegram=tg 邮箱=mail (访客评论提醒固定为邮箱方式)
comment.notify.channel=mail
# 新评论是否默认公开
comment.default-open=true

# 如果选择邮箱提醒方式，则会在收到评论后向填写的邮箱自身发送一封邮件(提醒自己)；如果选择tg，则填写的邮箱只作为提醒访客的发送方
# 邮箱配置
spring.mail.host=smtp.example.com
spring.mail.port=465
spring.mail.username=your-email@example.com
spring.mail.password=your-password
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.ssl.enable=true

# 如果选择邮箱提醒方式，以下可以无需修改
tg.bot.api=https://api.telegram.org/bot
# bot的token，可以从 @BotFather 处获取
tg.bot.token=your-telegram-bot-token
# 自己账号和bot的聊天会话id
tg.bot.chat-id=your-chat-id
# 是否使用代理
tg.bot.use-proxy=false
# 是否使用反向代理
tg.bot.use-reverse-proxy=false
# 反向代理URL
tg.bot.reverse-proxy-url=

# 代理配置，如不使用无需修改 (目前用于发送Telegram请求)
http.proxy.server.host=127.0.0.1
http.proxy.server.port=7890
http.proxy.server.timeout=10000

# 评论中QQ头像存储方式: 本地:local GitHub:github 又拍云:upyun
upload.channel=local

# 静态文件上传访问路径 Windows环境例如: C:/Users/username/upload/ Linux环境例如：/home/username/upload/
upload.file.path=C:/upload/
upload.file.access-path=/image/**
upload.file.resources-locations=file:${upload.file.path}

# 如果选择其它上传方式，以下可以无需修改
# GitHub token
upload.github.token=your-github-token
upload.github.username=your-github-username
# 需要用作图床的GitHub仓库名
upload.github.repos=your-repository
# 需要上传至仓库的路径 开头需要"/" 结尾不要"/"
upload.github.repos-path=/comment/avatar

# 又拍云存储空间名称
upload.upyun.bucket-name=your-bucket-name
# 操作员名称
upload.upyun.username=your-upyun-username
# 操作员密码
upload.upyun.password=your-upyun-password
# 存储路径
upload.upyun.path=/comment/avatar
# CDN访问域名
upload.upyun.domain=https://your-cdn.example.com